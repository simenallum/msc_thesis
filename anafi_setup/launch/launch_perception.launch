<?xml version="1.0" encoding="utf-8"?>

<launch>
    <arg name="run_apriltags_pose_estimator" default="true" />
    <arg name="run_ekf" default="true" />
    <arg name="run_dnncv" default="true" />
    <arg name="run_camera_control" default="true" />
    <arg name="run_transform_publisher" default="true" />

    <!-- ################### -->
    <!-- RUN GLOBAL CONFIG FILE -->
    <!-- ################### -->
    <rosparam command="load" file="$(find anafi_setup)/config/anafi_config.yaml"/>


    <!-- ################### -->
    <!-- Camera control -->
    <!-- ################### -->
    <group if="$(arg run_camera_control)">
        <node
        name="camera_control"
        pkg="camera_control"
        type="camera_control.py"
        output="screen">
        </node>
    </group>


    <!-- ################### -->
    <!-- Transform publisher -->
    <!-- ################### -->
    <group if="$(arg run_transform_publisher)">
        <node
            name="transform_publisher"
            pkg="transform_publisher"
            type="transform_publisher.py"
            output="screen">
        </node>
    
    </group>

    <!-- ################### -->
    <!-- EKF -->
    <!-- ################### -->
    <group if="$(arg run_ekf)">
        <node name="gnss_throttler" type="throttle" pkg="topic_tools" args="messages /anafi/gnss_ned_in_body_frame 1 /anafi/gnss_ned_in_body_frame/1hz" />

        <node
            name="perception_ekf"
            pkg="perception_ekf"
            type="run_ekf.py"
            output="screen">
            <param name="config_file" value="ekf_config.yaml" />
        </node>
    </group>

    <!-- ################### -->
    <!-- DNNCV -->
    <!-- ################### -->
    <group if="$(arg run_dnncv)">
        <node
            name="dnn_cv"
            pkg="dnncv"
            type="dnncv.py"
            output="screen">
            <param name="config_file" value="dnncv_config.yaml" />
        </node>

        <!-- DARKNET YOLO DETECTOR -->
        <!-- Console launch prefix -->
        <arg name="launch_prefix" default=""/>
        <arg name="image" default="/anafi/image" />

        <!-- Config and weights folder. -->
        <arg name="yolo_weights_path"          default="$(find dnncv)/yolo_network_config/weights"/>
        <arg name="yolo_config_path"           default="$(find dnncv)/yolo_network_config/cfg"/>

        <!-- ROS and network parameter files -->
        <arg name="ros_param_file"             default="$(find dnncv)/config/ros.yaml"/>
        <arg name="network_param_file"         default="$(find dnncv)/config/anafi_real.yaml"/>

        <!-- Load parameters -->
        <rosparam command="load" ns="darknet_ros" file="$(arg ros_param_file)"/>
        <rosparam command="load" ns="darknet_ros" file="$(arg network_param_file)"/>

        <!-- Start darknet and ros wrapper -->
        <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" launch-prefix="$(arg launch_prefix)">
            <param name="weights_path"          value="$(arg yolo_weights_path)" />
            <param name="config_path"           value="$(arg yolo_config_path)" />
            <remap from="camera/rgb/image_raw"  to="$(arg image)" />
        </node>
        
    </group>

    <!-- ################### -->
    <!-- APRILTAGS POSE ESTIMATOR -->
    <!-- ################### -->
    <group if="$(arg run_apriltags_pose_estimator)">
        
        <node name="image_throttler" type="throttle" pkg="topic_tools" args="messages /anafi/image 15 /anafi/image_t" />


        <arg name="calculate_run_times" default="false" />
        <arg name="view_camera_output" default="false" />
        <arg name="calculate_fullpipe_runtimes" default="false" />
        
        
        <node
            name="apriltags_pose_estimator"
            pkg="apriltags_pose_estimator"
            type="apriltags_pose_estimator.py"
            output="screen">
            
            <param name="environment" value="real" />
            <param name="config_file" value="config/apriltags_config.yaml" />
            <param name="calculate_run_times" value="$(arg calculate_run_times)"/>
            <param name="view_camera_output" value="$(arg view_camera_output)"/>
            <param name="calculate_fullpipe_runtimes" value="$(arg calculate_fullpipe_runtimes)"/>
        </node>
    </group>
    
</launch>